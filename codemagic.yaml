workflows:
  ios-workflow:
    name: iOS Build
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.pingandwink.pingandwink
      vars:
        ONESIGNAL_APP_ID: "a65a7e49-5606-45dd-b32d-9e12db9f4e72"
      flutter: stable
      xcode: latest
      cocoapods: default
    
    scripts:
      - name: Fix Xcode project entitlements
        script: |
          echo "🔧 Adding CODE_SIGN_ENTITLEMENTS to Xcode project..."
          cd ios
          
          # Backup project file
          cp Runner.xcodeproj/project.pbxproj Runner.xcodeproj/project.pbxproj.backup
          
          # Add CODE_SIGN_ENTITLEMENTS using sed
          sed -i '' 's/PRODUCT_NAME = "$(TARGET_NAME)";/PRODUCT_NAME = "$(TARGET_NAME)";\
				CODE_SIGN_ENTITLEMENTS = Runner\/Runner.entitlements;/g' Runner.xcodeproj/project.pbxproj
          
          echo "✅ CODE_SIGN_ENTITLEMENTS added to project"
          
      - name: Verify entitlements setup
        script: |
          echo "📋 Verifying push notification configuration..."
          echo ""
          echo "1. Checking Runner.entitlements content:"
          if [ -f "ios/Runner/Runner.entitlements" ]; then
            cat ios/Runner/Runner.entitlements
            echo "✅ Entitlements file exists"
          else
            echo "❌ Runner.entitlements NOT FOUND!"
            exit 1
          fi
          echo ""
          echo "2. Checking for aps-environment:"
          grep "aps-environment" ios/Runner/Runner.entitlements && echo "✅ aps-environment found" || echo "❌ aps-environment NOT FOUND!"
          echo ""
          echo "3. Checking CODE_SIGN_ENTITLEMENTS in project:"
          grep "CODE_SIGN_ENTITLEMENTS" ios/Runner.xcodeproj/project.pbxproj && echo "✅ CODE_SIGN_ENTITLEMENTS found" || echo "⚠️ CODE_SIGN_ENTITLEMENTS not found"
          
      - name: Install dependencies
        script: |
          flutter pub get
          cd ios && pod install
      
      - name: Flutter build IPA
        script: |
          flutter build ipa --release \
            --export-options-plist=/Users/builder/export_options.plist
    
    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/archive/*.xcarchive
    
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false
      email:
        recipients:
          - pingandwink@gmail.com
        notify:
          success: true
          failure: true

  android-workflow:
    name: Android Build
    instance_type: linux_x2
    max_build_duration: 30
    environment:
      flutter: stable
      vars:
        ONESIGNAL_APP_ID: "a65a7e49-5606-45dd-b32d-9e12db9f4e72"
    
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      
      - name: Get Flutter packages
        script: |
          flutter pub get
      
      - name: Build APK
        script: |
          flutter build apk --release
    
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk